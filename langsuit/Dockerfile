FROM node:20-alpine

WORKDIR /app

# Copy package files first to leverage Docker cache
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Define all build arguments
ARG NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY
ARG NEXT_PUBLIC_CLERK_SIGN_IN_URL
ARG NEXT_PUBLIC_CLERK_SIGN_UP_URL
ARG NEXT_PUBLIC_APP_URL
ARG DATABASE_URL
ARG CLERK_SECRET_KEY
ARG MONGODB_URI
ARG CLERK_ADMIN_IDS
ARG STRIPE_API_SECRET_KEY
ARG STRIPE_WEBHOOK_SECRET
ARG REDIS_URL
ARG ENVIRONMENT

# Set all environment variables
ENV NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
ENV NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
ENV NEXT_PUBLIC_CLERK_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_URL}
ENV NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
ENV DATABASE_URL=${DATABASE_URL}
ENV CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
ENV MONGODB_URI=${MONGODB_URI}
ENV CLERK_ADMIN_IDS=${CLERK_ADMIN_IDS}
ENV STRIPE_API_SECRET_KEY=${STRIPE_API_SECRET_KEY}
ENV STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
ENV REDIS_URL=${REDIS_URL}
ENV ENVIRONMENT=${ENVIRONMENT}

# Build the application
RUN npm run build

EXPOSE 3000

CMD ["npm", "start"]
